8. Соединения таблиц
Это принципиально важный механизм SQL, без которого этот язык был бы, по большому счёту, бесполезен. Мы научились делать вложенные запросы, комбинируя наборы из разных таблиц, однако они фактически позволяют отбирать сведения лишь из одной таблицы. Требуется режим, когда в одном запросе используются поля из разных таблиц базы данных.

8.1. Обычное соединение таблиц

В команде SELECT перед каждым полем можно указывать префикс: имя таблицы с точкой. В списке таблиц FROM в таком случае приводятся все задействованные в запросе таблицы.

Например, возможна такая запись:

SELECT Employees.FirstName, Employees.LastName, Orders.Freight 
FROM Employees, Orders; 
Мы получим так называемое декартово произведение таблиц -- все возможные комбинации, совсем не обязательно совпадающие по FK-ключам. На такое соединение мы даже можем наложить условие:

SELECT Employees.FirstName, Employees.LastName, Orders.Freight 
FROM Employees, Orders 
WHERE Orders.Freight > 50; 
Однако оно выдаст множество записей, в которых сотрудники и заказы необязательно связаны друг с другом.

8.2. Эквисоединения

Как правило, в реальных запросах к нескольким таблицам используются так называемые эквисоединения. Термин "эквисоединение" заимствован из реляционной алгебры.

Эквисоединение -- это соединение между таблицами, в котором проверяется равенство значения поля одной таблицы значению поля другой таблицы.

Пусть требуется узнать всех сотрудников (таблица Employees), которые оформляли заказы (таблица Orders) с ценой за груз (поле Freight) на уровне более 50.

Сперва нам надо определить явную связь между таблицами:

SELECT Employees.FirstName, Employees.LastName, Orders.Freight 
FROM Employees, Orders 
WHERE Orders.EmployeeID = Employees.EmployeeID 
И только после этого наложить условие на цену:

SELECT Employees.FirstName, Employees.LastName, Orders.Freight
FROM Employees, Orders
WHERE Orders.EmployeeID = Employees.EmployeeID AND Orders.Freight > 50;


Задания

8.3.1. Сформируйте список названий товаров (таблица Products) с указанием для каждого из них соответствующей категории (таблица Categories).

8.3.2. Организуйте эквисоединение, которое выводит цену и названия тех товаров, для которых цена за единицу (UnitPrice) в таблице Order Details меньше 20.

8.3.3. Добавьте к предыдущему запросу третью таблицу Categories, и выведите в дополнение к названию товара его категорию.

Решение задания 7
7.3.1. Выведите вычислимое поле таблицы Order Details, в котором укажите значение поля Discount (скидка), выраженное в процентах.
SELECT OrderID, ProductID, Discount * 100 as discount_percent
FROM [Order Details]
7.3.2. Выведите все поля таблицы Order Details, для которых количество единиц товара на складе больше 40. Поле UnitsInStock (складские запасы) извлеките вложенным запросом через FK-поле ProductId, ссылающееся на таблицу Products.
SELECT * FROM [Order Details]
WHERE ProductID IN
  (SELECT ProductID FROM Products 
          WHERE UnitsInStock > 40)
7.3.3. Расширьте предыдущий запрос проверкой, чтобы стоимость товара (поле Freight таблицы Orders) было не менее 50. Связь с таблицей Orders происходит через FK-поле OrderID.
SELECT * FROM [Order Details]
WHERE ProductID IN
   (SELECT ProductID FROM Products 
    WHERE UnitsInStock > 40)
  AND OrderID IN
   (SELECT OrderID FROM Orders
    WHERE Freight >= 50)