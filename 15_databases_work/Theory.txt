15. Работа с базами данных
Язык SQL позволяет создавать и удалять сами базы данных (наборы таблиц и вспомогательная информация), создавать новые таблицы и изменять структуру существующих.

15.1. Создание новой базы данных

Команда создания новой базы данных минималистична:

CREATE DATABASE имя-базы;
Давайте в дополнение к учебной базе Northwind добавим собственную тестовую базу MyTest:

CREATE DATABASE MyTest; 


15.2. Удаление базы данных

Команда полного удаления базы вместе со всем её содержимым:

DROP DATABASE имя-базы;
По понятным причинам будьте крайне осторожны с этой командой.

15.3. Текущая база данных

Когда мы начнём работать с таблицами и запросами, важно определиться, с какой базой данных мы взаимодействуем. По умолчанию например может использоваться база данных Northwind, поэтому в нашем случае необходимо явно указать серверу, что мы переходим к работе с базой данных MyTest. Для этого применяется команда

USE имя-базы-данных;

USE MyTest;
15.4. Создание таблицы

Пока наша база данных пуста. Создадим в ней новую таблицу с помощью команды CREATE TABLE:

CREATE TABLE имя-таблицы (список-описаний-полей);
Список описаний полей представляет собой набор пар

имя-поля тип-поля
Каждая пара отделяется запятой. При необходимости тип поля может дополняться спецификатором длины (для текстовых полей).

Например, мы создадим таблицу Region со структурой, аналогичной таблице Region из базы Northwind:

CREATE TABLE Region ( 
    RegionID int NOT NULL, 
    RegionDescription nchar(50) NOT NULL ); 
Будет сформирована таблица с двумя полями: RegionID типа int (целое) и RegionDescription типа nchar (символьная строка в формате юникода) длиной до 50 символов.

Кроме того, для каждого поля дополнительно указан атрибут NOT NULL, который определяет, что в данном поле не допускаются нулевые (NULL) значения. Точно так же мы можем явно разрешить нулевые поля, указав NULL.

Дополнительно мы можем указать значение для поля по умолчанию с помощью ключевого слова DEFAULT:

...
RegionDescription nchar(50) NOT NULL DEFAULT 'Eastern' 
...
15.5. Модификация структуры таблицы

Структуру существующей таблицы можно модифицировать, например добавить новые поля. Для этого предназначена команда ALTER TABLE:

ALTER TABLE имя-таблицы ADD имя-поля тип-поля;
Например, можно пополнить ранее созданную таблицу Region полем Help:

ALTER TABLE Region ADD Help nchar(16); 
Новое поле добавляется в конец записи. Исходно его значение для существующих записей считается неопределенным.

Вместо ADD можно использовать ключевое слово MODIFY для смены типа поля (данная операция не всегда допустима и зависит от возможности автоматического преобразования данных) и слово DROP для удаления поля.

15.6. Удаление таблицы

Пустую таблицу можно уничтожить. Команда:

DROP TABLE имя-таблицы
удаляет заданную таблицу из базы данных при условии, что в ней нет ни одной записи.

Важно: Современные СУБД обычно предлагают весьма удобные графические оболочки, как в нашем случае, где многие вышеперечисленные манипуляции можно выполнять через комфортный графический интерфейс.

15.7. Задание
Создайте в новой базе таблицу Territories со структурой, аналогичной структуре таблицы Territories из учебной базы. Добавьте в неё и таблицу Region несколько значений так, чтобы они оказались связаны друг с другом через FK.

Решение задания 14
14.1. Чем представление Invoices отличается от таблицы Orders?
Invoice отбирает все данные из таблиц, связанных с Orders. Судя по названию Invoice (накладная, счёт) это сделано для того, чтобы с помощью данного представления выписывать счета, где требуется печатать имена, а не ID.

14.2. Что делает представление "CategorySales for 1997"?
Показывает продажи (сумму в $) по категориям товаров в 1997 г., извлекая данные из другого представления.

14.3. Что делает представление "Sales Total by Amount"?
Показывает, на какую сумму, когда и какому клиенту был оформлен заказ.

14.4. Что делает представление "Products Above Average Price"?
Показывает список товаров с ценой выше средней по магазину.

14.5. Что делает представление "Summary of Sales by Quarter"?
Показывает дату доставки, сумму и ID заказа.