14. Представления (View)
В дополнение к таблицам современные СУБД активно используют так называемые представления.

Представление -- это именованный набор данных, который физически не существует в таблице, а формируется динамически при выполнении запроса SQL. Текст запроса хранится в базе данных, а не в клиентской программе, поэтому с точки зрения пользователя базы данных представление по структуре ничем не отличается от таблицы.

Содержимое представления формируется динамически, выполнением запроса в момент обращения к представлению по имени. Результат работы запроса и становится содержимым представления, передаваемым клиентскому приложению.

В качестве команды выступает, как правило, команда SELECT, а ее результирующий набор считается содержимым представления. Например, команда

CREATE VIEW USA_Customers AS
SELECT * FROM Customers
WHERE Country = 'USA';
создаст в базе данных преставление, обращение к которому сформирует содержимое таблицы Customers, отфильтрованное по значению страны. Однако физически в базе данных хранится лишь текст этого запроса SQL, хотя название представления доступно наряду с именами таблиц.

Представления, доступные в базе данных, можно увидеть в разделе Views (Представления).



Видно, что в учебной базе уже существует приличный список представлений. Текст, а также визуальную схему каждого из них можно увидеть, вызвав из локального меню конкретного представления команду Design:



Задания

Попробуйте разобраться по исходному коду запросов:

14.1. Чем представление Invoices отличается от таблицы Orders?

14.2. Что делает представление "CategorySales for 1997"?

14.3. Что делает представление "Sales Total by Amount"?

14.4. Что делает представление "Products Above Average Price"?

14.5. Что делает представление "Summary of Sales by Quarter"?

Решение задания 13
13.3.1. Увеличьте скидку (Discount) в таблице Order Details до 20% (0.20) для тех единиц товара, которых на складе хранится больше 50 (поле Quantity). Напишите запрос, но не выполняйте, чтобы не вносить изменения в таблицу.

UPDATE [Order Details]
SET Discount = 0.20
WHERE Quantity > 50
UPDATE [OrderDetails]
SET Discount = 0.20
WHERE ProductID IN
  (SELECT ProductID IN Products
   WHERE UnitsInStock > 50)
13.3.2. В таблице Contacts измените все контактные данные, ранее приходившиеся на Berlin (поле City) и Germany (поле Country), соответственно на Piter и Russia. Напишите запрос, но не выполняйте, чтобы не вносить изменения в таблицу.

UPDATE Contacts
SET City = "Piter", Country = "Russia"
WHERE City = "Berlin" OR Country = "Germany"
13.3.3. Добавьте и затем удалите несколько записей в таблице Shippers. По какому критерию вы удаляли свежие записи?

INSERT INTO Shippers (CompanyName)
VALUES ("Delete Me")

/************/

DELETE FROM Shippers
WHERE CompanyName = "Delete Me"
Если мы ничего не знаем об ID, то удалить можно по имени компании. Но в целом это будет неверный подход: удалять надо именно по ID, который можно получить через SELECT, т.к. в таблице может быть несколько записей о компании "Delete Me".